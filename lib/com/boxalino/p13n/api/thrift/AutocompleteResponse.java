/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.boxalino.p13n.api.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-01-25")
public class AutocompleteResponse implements org.apache.thrift.TBase<AutocompleteResponse, AutocompleteResponse._Fields>, java.io.Serializable, Cloneable, Comparable<AutocompleteResponse> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("AutocompleteResponse");

  private static final org.apache.thrift.protocol.TField HITS_FIELD_DESC = new org.apache.thrift.protocol.TField("hits", org.apache.thrift.protocol.TType.LIST, (short)11);
  private static final org.apache.thrift.protocol.TField PREFIX_SEARCH_RESULT_FIELD_DESC = new org.apache.thrift.protocol.TField("prefixSearchResult", org.apache.thrift.protocol.TType.STRUCT, (short)21);
  private static final org.apache.thrift.protocol.TField PROPERTY_RESULTS_FIELD_DESC = new org.apache.thrift.protocol.TField("propertyResults", org.apache.thrift.protocol.TType.LIST, (short)31);
  private static final org.apache.thrift.protocol.TField EXTRA_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("extraInfo", org.apache.thrift.protocol.TType.MAP, (short)41);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new AutocompleteResponseStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new AutocompleteResponseTupleSchemeFactory();

  public java.util.List<AutocompleteHit> hits; // required
  public SearchResult prefixSearchResult; // required
  public java.util.List<PropertyResult> propertyResults; // required
  public java.util.Map<java.lang.String,java.lang.String> extraInfo; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    HITS((short)11, "hits"),
    PREFIX_SEARCH_RESULT((short)21, "prefixSearchResult"),
    PROPERTY_RESULTS((short)31, "propertyResults"),
    EXTRA_INFO((short)41, "extraInfo");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 11: // HITS
          return HITS;
        case 21: // PREFIX_SEARCH_RESULT
          return PREFIX_SEARCH_RESULT;
        case 31: // PROPERTY_RESULTS
          return PROPERTY_RESULTS;
        case 41: // EXTRA_INFO
          return EXTRA_INFO;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.HITS, new org.apache.thrift.meta_data.FieldMetaData("hits", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, AutocompleteHit.class))));
    tmpMap.put(_Fields.PREFIX_SEARCH_RESULT, new org.apache.thrift.meta_data.FieldMetaData("prefixSearchResult", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SearchResult.class)));
    tmpMap.put(_Fields.PROPERTY_RESULTS, new org.apache.thrift.meta_data.FieldMetaData("propertyResults", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, PropertyResult.class))));
    tmpMap.put(_Fields.EXTRA_INFO, new org.apache.thrift.meta_data.FieldMetaData("extraInfo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(AutocompleteResponse.class, metaDataMap);
  }

  public AutocompleteResponse() {
  }

  public AutocompleteResponse(
    java.util.List<AutocompleteHit> hits,
    SearchResult prefixSearchResult,
    java.util.List<PropertyResult> propertyResults,
    java.util.Map<java.lang.String,java.lang.String> extraInfo)
  {
    this();
    this.hits = hits;
    this.prefixSearchResult = prefixSearchResult;
    this.propertyResults = propertyResults;
    this.extraInfo = extraInfo;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public AutocompleteResponse(AutocompleteResponse other) {
    if (other.isSetHits()) {
      java.util.List<AutocompleteHit> __this__hits = new java.util.ArrayList<AutocompleteHit>(other.hits.size());
      for (AutocompleteHit other_element : other.hits) {
        __this__hits.add(new AutocompleteHit(other_element));
      }
      this.hits = __this__hits;
    }
    if (other.isSetPrefixSearchResult()) {
      this.prefixSearchResult = new SearchResult(other.prefixSearchResult);
    }
    if (other.isSetPropertyResults()) {
      java.util.List<PropertyResult> __this__propertyResults = new java.util.ArrayList<PropertyResult>(other.propertyResults.size());
      for (PropertyResult other_element : other.propertyResults) {
        __this__propertyResults.add(new PropertyResult(other_element));
      }
      this.propertyResults = __this__propertyResults;
    }
    if (other.isSetExtraInfo()) {
      java.util.Map<java.lang.String,java.lang.String> __this__extraInfo = new java.util.HashMap<java.lang.String,java.lang.String>(other.extraInfo);
      this.extraInfo = __this__extraInfo;
    }
  }

  public AutocompleteResponse deepCopy() {
    return new AutocompleteResponse(this);
  }

  @Override
  public void clear() {
    this.hits = null;
    this.prefixSearchResult = null;
    this.propertyResults = null;
    this.extraInfo = null;
  }

  public int getHitsSize() {
    return (this.hits == null) ? 0 : this.hits.size();
  }

  public java.util.Iterator<AutocompleteHit> getHitsIterator() {
    return (this.hits == null) ? null : this.hits.iterator();
  }

  public void addToHits(AutocompleteHit elem) {
    if (this.hits == null) {
      this.hits = new java.util.ArrayList<AutocompleteHit>();
    }
    this.hits.add(elem);
  }

  public java.util.List<AutocompleteHit> getHits() {
    return this.hits;
  }

  public AutocompleteResponse setHits(java.util.List<AutocompleteHit> hits) {
    this.hits = hits;
    return this;
  }

  public void unsetHits() {
    this.hits = null;
  }

  /** Returns true if field hits is set (has been assigned a value) and false otherwise */
  public boolean isSetHits() {
    return this.hits != null;
  }

  public void setHitsIsSet(boolean value) {
    if (!value) {
      this.hits = null;
    }
  }

  public SearchResult getPrefixSearchResult() {
    return this.prefixSearchResult;
  }

  public AutocompleteResponse setPrefixSearchResult(SearchResult prefixSearchResult) {
    this.prefixSearchResult = prefixSearchResult;
    return this;
  }

  public void unsetPrefixSearchResult() {
    this.prefixSearchResult = null;
  }

  /** Returns true if field prefixSearchResult is set (has been assigned a value) and false otherwise */
  public boolean isSetPrefixSearchResult() {
    return this.prefixSearchResult != null;
  }

  public void setPrefixSearchResultIsSet(boolean value) {
    if (!value) {
      this.prefixSearchResult = null;
    }
  }

  public int getPropertyResultsSize() {
    return (this.propertyResults == null) ? 0 : this.propertyResults.size();
  }

  public java.util.Iterator<PropertyResult> getPropertyResultsIterator() {
    return (this.propertyResults == null) ? null : this.propertyResults.iterator();
  }

  public void addToPropertyResults(PropertyResult elem) {
    if (this.propertyResults == null) {
      this.propertyResults = new java.util.ArrayList<PropertyResult>();
    }
    this.propertyResults.add(elem);
  }

  public java.util.List<PropertyResult> getPropertyResults() {
    return this.propertyResults;
  }

  public AutocompleteResponse setPropertyResults(java.util.List<PropertyResult> propertyResults) {
    this.propertyResults = propertyResults;
    return this;
  }

  public void unsetPropertyResults() {
    this.propertyResults = null;
  }

  /** Returns true if field propertyResults is set (has been assigned a value) and false otherwise */
  public boolean isSetPropertyResults() {
    return this.propertyResults != null;
  }

  public void setPropertyResultsIsSet(boolean value) {
    if (!value) {
      this.propertyResults = null;
    }
  }

  public int getExtraInfoSize() {
    return (this.extraInfo == null) ? 0 : this.extraInfo.size();
  }

  public void putToExtraInfo(java.lang.String key, java.lang.String val) {
    if (this.extraInfo == null) {
      this.extraInfo = new java.util.HashMap<java.lang.String,java.lang.String>();
    }
    this.extraInfo.put(key, val);
  }

  public java.util.Map<java.lang.String,java.lang.String> getExtraInfo() {
    return this.extraInfo;
  }

  public AutocompleteResponse setExtraInfo(java.util.Map<java.lang.String,java.lang.String> extraInfo) {
    this.extraInfo = extraInfo;
    return this;
  }

  public void unsetExtraInfo() {
    this.extraInfo = null;
  }

  /** Returns true if field extraInfo is set (has been assigned a value) and false otherwise */
  public boolean isSetExtraInfo() {
    return this.extraInfo != null;
  }

  public void setExtraInfoIsSet(boolean value) {
    if (!value) {
      this.extraInfo = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case HITS:
      if (value == null) {
        unsetHits();
      } else {
        setHits((java.util.List<AutocompleteHit>)value);
      }
      break;

    case PREFIX_SEARCH_RESULT:
      if (value == null) {
        unsetPrefixSearchResult();
      } else {
        setPrefixSearchResult((SearchResult)value);
      }
      break;

    case PROPERTY_RESULTS:
      if (value == null) {
        unsetPropertyResults();
      } else {
        setPropertyResults((java.util.List<PropertyResult>)value);
      }
      break;

    case EXTRA_INFO:
      if (value == null) {
        unsetExtraInfo();
      } else {
        setExtraInfo((java.util.Map<java.lang.String,java.lang.String>)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case HITS:
      return getHits();

    case PREFIX_SEARCH_RESULT:
      return getPrefixSearchResult();

    case PROPERTY_RESULTS:
      return getPropertyResults();

    case EXTRA_INFO:
      return getExtraInfo();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case HITS:
      return isSetHits();
    case PREFIX_SEARCH_RESULT:
      return isSetPrefixSearchResult();
    case PROPERTY_RESULTS:
      return isSetPropertyResults();
    case EXTRA_INFO:
      return isSetExtraInfo();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof AutocompleteResponse)
      return this.equals((AutocompleteResponse)that);
    return false;
  }

  public boolean equals(AutocompleteResponse that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_hits = true && this.isSetHits();
    boolean that_present_hits = true && that.isSetHits();
    if (this_present_hits || that_present_hits) {
      if (!(this_present_hits && that_present_hits))
        return false;
      if (!this.hits.equals(that.hits))
        return false;
    }

    boolean this_present_prefixSearchResult = true && this.isSetPrefixSearchResult();
    boolean that_present_prefixSearchResult = true && that.isSetPrefixSearchResult();
    if (this_present_prefixSearchResult || that_present_prefixSearchResult) {
      if (!(this_present_prefixSearchResult && that_present_prefixSearchResult))
        return false;
      if (!this.prefixSearchResult.equals(that.prefixSearchResult))
        return false;
    }

    boolean this_present_propertyResults = true && this.isSetPropertyResults();
    boolean that_present_propertyResults = true && that.isSetPropertyResults();
    if (this_present_propertyResults || that_present_propertyResults) {
      if (!(this_present_propertyResults && that_present_propertyResults))
        return false;
      if (!this.propertyResults.equals(that.propertyResults))
        return false;
    }

    boolean this_present_extraInfo = true && this.isSetExtraInfo();
    boolean that_present_extraInfo = true && that.isSetExtraInfo();
    if (this_present_extraInfo || that_present_extraInfo) {
      if (!(this_present_extraInfo && that_present_extraInfo))
        return false;
      if (!this.extraInfo.equals(that.extraInfo))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetHits()) ? 131071 : 524287);
    if (isSetHits())
      hashCode = hashCode * 8191 + hits.hashCode();

    hashCode = hashCode * 8191 + ((isSetPrefixSearchResult()) ? 131071 : 524287);
    if (isSetPrefixSearchResult())
      hashCode = hashCode * 8191 + prefixSearchResult.hashCode();

    hashCode = hashCode * 8191 + ((isSetPropertyResults()) ? 131071 : 524287);
    if (isSetPropertyResults())
      hashCode = hashCode * 8191 + propertyResults.hashCode();

    hashCode = hashCode * 8191 + ((isSetExtraInfo()) ? 131071 : 524287);
    if (isSetExtraInfo())
      hashCode = hashCode * 8191 + extraInfo.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(AutocompleteResponse other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetHits()).compareTo(other.isSetHits());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHits()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hits, other.hits);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPrefixSearchResult()).compareTo(other.isSetPrefixSearchResult());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPrefixSearchResult()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.prefixSearchResult, other.prefixSearchResult);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPropertyResults()).compareTo(other.isSetPropertyResults());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPropertyResults()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.propertyResults, other.propertyResults);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetExtraInfo()).compareTo(other.isSetExtraInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExtraInfo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.extraInfo, other.extraInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("AutocompleteResponse(");
    boolean first = true;

    sb.append("hits:");
    if (this.hits == null) {
      sb.append("null");
    } else {
      sb.append(this.hits);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("prefixSearchResult:");
    if (this.prefixSearchResult == null) {
      sb.append("null");
    } else {
      sb.append(this.prefixSearchResult);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("propertyResults:");
    if (this.propertyResults == null) {
      sb.append("null");
    } else {
      sb.append(this.propertyResults);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("extraInfo:");
    if (this.extraInfo == null) {
      sb.append("null");
    } else {
      sb.append(this.extraInfo);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (prefixSearchResult != null) {
      prefixSearchResult.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class AutocompleteResponseStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public AutocompleteResponseStandardScheme getScheme() {
      return new AutocompleteResponseStandardScheme();
    }
  }

  private static class AutocompleteResponseStandardScheme extends org.apache.thrift.scheme.StandardScheme<AutocompleteResponse> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, AutocompleteResponse struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 11: // HITS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list314 = iprot.readListBegin();
                struct.hits = new java.util.ArrayList<AutocompleteHit>(_list314.size);
                AutocompleteHit _elem315;
                for (int _i316 = 0; _i316 < _list314.size; ++_i316)
                {
                  _elem315 = new AutocompleteHit();
                  _elem315.read(iprot);
                  struct.hits.add(_elem315);
                }
                iprot.readListEnd();
              }
              struct.setHitsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // PREFIX_SEARCH_RESULT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.prefixSearchResult = new SearchResult();
              struct.prefixSearchResult.read(iprot);
              struct.setPrefixSearchResultIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 31: // PROPERTY_RESULTS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list317 = iprot.readListBegin();
                struct.propertyResults = new java.util.ArrayList<PropertyResult>(_list317.size);
                PropertyResult _elem318;
                for (int _i319 = 0; _i319 < _list317.size; ++_i319)
                {
                  _elem318 = new PropertyResult();
                  _elem318.read(iprot);
                  struct.propertyResults.add(_elem318);
                }
                iprot.readListEnd();
              }
              struct.setPropertyResultsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 41: // EXTRA_INFO
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map320 = iprot.readMapBegin();
                struct.extraInfo = new java.util.HashMap<java.lang.String,java.lang.String>(2*_map320.size);
                java.lang.String _key321;
                java.lang.String _val322;
                for (int _i323 = 0; _i323 < _map320.size; ++_i323)
                {
                  _key321 = iprot.readString();
                  _val322 = iprot.readString();
                  struct.extraInfo.put(_key321, _val322);
                }
                iprot.readMapEnd();
              }
              struct.setExtraInfoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, AutocompleteResponse struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.hits != null) {
        oprot.writeFieldBegin(HITS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.hits.size()));
          for (AutocompleteHit _iter324 : struct.hits)
          {
            _iter324.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.prefixSearchResult != null) {
        oprot.writeFieldBegin(PREFIX_SEARCH_RESULT_FIELD_DESC);
        struct.prefixSearchResult.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.propertyResults != null) {
        oprot.writeFieldBegin(PROPERTY_RESULTS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.propertyResults.size()));
          for (PropertyResult _iter325 : struct.propertyResults)
          {
            _iter325.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.extraInfo != null) {
        oprot.writeFieldBegin(EXTRA_INFO_FIELD_DESC);
        {
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, struct.extraInfo.size()));
          for (java.util.Map.Entry<java.lang.String, java.lang.String> _iter326 : struct.extraInfo.entrySet())
          {
            oprot.writeString(_iter326.getKey());
            oprot.writeString(_iter326.getValue());
          }
          oprot.writeMapEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class AutocompleteResponseTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public AutocompleteResponseTupleScheme getScheme() {
      return new AutocompleteResponseTupleScheme();
    }
  }

  private static class AutocompleteResponseTupleScheme extends org.apache.thrift.scheme.TupleScheme<AutocompleteResponse> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, AutocompleteResponse struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetHits()) {
        optionals.set(0);
      }
      if (struct.isSetPrefixSearchResult()) {
        optionals.set(1);
      }
      if (struct.isSetPropertyResults()) {
        optionals.set(2);
      }
      if (struct.isSetExtraInfo()) {
        optionals.set(3);
      }
      oprot.writeBitSet(optionals, 4);
      if (struct.isSetHits()) {
        {
          oprot.writeI32(struct.hits.size());
          for (AutocompleteHit _iter327 : struct.hits)
          {
            _iter327.write(oprot);
          }
        }
      }
      if (struct.isSetPrefixSearchResult()) {
        struct.prefixSearchResult.write(oprot);
      }
      if (struct.isSetPropertyResults()) {
        {
          oprot.writeI32(struct.propertyResults.size());
          for (PropertyResult _iter328 : struct.propertyResults)
          {
            _iter328.write(oprot);
          }
        }
      }
      if (struct.isSetExtraInfo()) {
        {
          oprot.writeI32(struct.extraInfo.size());
          for (java.util.Map.Entry<java.lang.String, java.lang.String> _iter329 : struct.extraInfo.entrySet())
          {
            oprot.writeString(_iter329.getKey());
            oprot.writeString(_iter329.getValue());
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, AutocompleteResponse struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(4);
      if (incoming.get(0)) {
        {
          org.apache.thrift.protocol.TList _list330 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.hits = new java.util.ArrayList<AutocompleteHit>(_list330.size);
          AutocompleteHit _elem331;
          for (int _i332 = 0; _i332 < _list330.size; ++_i332)
          {
            _elem331 = new AutocompleteHit();
            _elem331.read(iprot);
            struct.hits.add(_elem331);
          }
        }
        struct.setHitsIsSet(true);
      }
      if (incoming.get(1)) {
        struct.prefixSearchResult = new SearchResult();
        struct.prefixSearchResult.read(iprot);
        struct.setPrefixSearchResultIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TList _list333 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.propertyResults = new java.util.ArrayList<PropertyResult>(_list333.size);
          PropertyResult _elem334;
          for (int _i335 = 0; _i335 < _list333.size; ++_i335)
          {
            _elem334 = new PropertyResult();
            _elem334.read(iprot);
            struct.propertyResults.add(_elem334);
          }
        }
        struct.setPropertyResultsIsSet(true);
      }
      if (incoming.get(3)) {
        {
          org.apache.thrift.protocol.TMap _map336 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.extraInfo = new java.util.HashMap<java.lang.String,java.lang.String>(2*_map336.size);
          java.lang.String _key337;
          java.lang.String _val338;
          for (int _i339 = 0; _i339 < _map336.size; ++_i339)
          {
            _key337 = iprot.readString();
            _val338 = iprot.readString();
            struct.extraInfo.put(_key337, _val338);
          }
        }
        struct.setExtraInfoIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

